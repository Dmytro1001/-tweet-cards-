{"version":3,"file":"static/js/264.489c63dc.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/ky/source/errors/HTTPError.ts","../node_modules/ky/source/errors/TimeoutError.ts","../node_modules/ky/source/utils/is.ts","../node_modules/ky/source/utils/merge.ts","../node_modules/ky/source/core/constants.ts","../node_modules/ky/source/utils/normalize.ts","../node_modules/ky/source/utils/timeout.ts","../node_modules/ky/source/errors/DOMException.ts","../node_modules/ky/source/utils/delay.ts","../node_modules/ky/source/core/Ky.ts","../node_modules/ky/source/index.ts"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import type {NormalizedOptions} from '../types/options.js';\n\n// eslint-lint-disable-next-line @typescript-eslint/naming-convention\nexport class HTTPError extends Error {\n\tpublic response: Response;\n\tpublic request: Request;\n\tpublic options: NormalizedOptions;\n\n\tconstructor(response: Response, request: Request, options: NormalizedOptions) {\n\t\tconst code = (response.status || response.status === 0) ? response.status : '';\n\t\tconst title = response.statusText || '';\n\t\tconst status = `${code} ${title}`.trim();\n\t\tconst reason = status ? `status code ${status}` : 'an unknown error';\n\n\t\tsuper(`Request failed with ${reason}`);\n\n\t\tthis.name = 'HTTPError';\n\t\tthis.response = response;\n\t\tthis.request = request;\n\t\tthis.options = options;\n\t}\n}\n","export class TimeoutError extends Error {\n\tpublic request: Request;\n\n\tconstructor(request: Request) {\n\t\tsuper('Request timed out');\n\t\tthis.name = 'TimeoutError';\n\t\tthis.request = request;\n\t}\n}\n","// eslint-disable-next-line @typescript-eslint/ban-types\nexport const isObject = (value: unknown): value is object => value !== null && typeof value === 'object';\n","import type {KyHeadersInit, Options} from '../types/options.js';\nimport {isObject} from './is.js';\n\nexport const validateAndMerge = (...sources: Array<Partial<Options> | undefined>): Partial<Options> => {\n\tfor (const source of sources) {\n\t\tif ((!isObject(source) || Array.isArray(source)) && typeof source !== 'undefined') {\n\t\t\tthrow new TypeError('The `options` argument must be an object');\n\t\t}\n\t}\n\n\treturn deepMerge({}, ...sources);\n};\n\nexport const mergeHeaders = (source1: KyHeadersInit = {}, source2: KyHeadersInit = {}) => {\n\tconst result = new globalThis.Headers(source1 as HeadersInit);\n\tconst isHeadersInstance = source2 instanceof globalThis.Headers;\n\tconst source = new globalThis.Headers(source2 as HeadersInit);\n\n\tfor (const [key, value] of source.entries()) {\n\t\tif ((isHeadersInstance && value === 'undefined') || value === undefined) {\n\t\t\tresult.delete(key);\n\t\t} else {\n\t\t\tresult.set(key, value);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n// TODO: Make this strongly-typed (no `any`).\nexport const deepMerge = <T>(...sources: Array<Partial<T> | undefined>): T => {\n\tlet returnValue: any = {};\n\tlet headers = {};\n\n\tfor (const source of sources) {\n\t\tif (Array.isArray(source)) {\n\t\t\tif (!Array.isArray(returnValue)) {\n\t\t\t\treturnValue = [];\n\t\t\t}\n\n\t\t\treturnValue = [...returnValue, ...source];\n\t\t} else if (isObject(source)) {\n\t\t\tfor (let [key, value] of Object.entries(source)) {\n\t\t\t\tif (isObject(value) && key in returnValue) {\n\t\t\t\t\tvalue = deepMerge(returnValue[key], value);\n\t\t\t\t}\n\n\t\t\t\treturnValue = {...returnValue, [key]: value};\n\t\t\t}\n\n\t\t\tif (isObject((source as any).headers)) {\n\t\t\t\theaders = mergeHeaders(headers, (source as any).headers);\n\t\t\t\treturnValue.headers = headers;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn returnValue;\n};\n","import type {Expect, Equal} from '@type-challenges/utils';\nimport {HttpMethod} from '../types/options.js';\n\nexport const supportsRequestStreams = (() => {\n\tlet duplexAccessed = false;\n\tlet hasContentType = false;\n\tconst supportsReadableStream = typeof globalThis.ReadableStream === 'function';\n\tconst supportsRequest = typeof globalThis.Request === 'function';\n\n\tif (supportsReadableStream && supportsRequest) {\n\t\thasContentType = new globalThis.Request('https://a.com', {\n\t\t\tbody: new globalThis.ReadableStream(),\n\t\t\tmethod: 'POST',\n\t\t\t// @ts-expect-error - Types are outdated.\n\t\t\tget duplex() {\n\t\t\t\tduplexAccessed = true;\n\t\t\t\treturn 'half';\n\t\t\t},\n\t\t}).headers.has('Content-Type');\n\t}\n\n\treturn duplexAccessed && !hasContentType;\n})();\n\nexport const supportsAbortController = typeof globalThis.AbortController === 'function';\nexport const supportsResponseStreams = typeof globalThis.ReadableStream === 'function';\nexport const supportsFormData = typeof globalThis.FormData === 'function';\n\nexport const requestMethods = ['get', 'post', 'put', 'patch', 'head', 'delete'] as const;\n\nconst validate = <T extends Array<true>>() => undefined as unknown as T;\nvalidate<[\n\tExpect<Equal<typeof requestMethods[number], HttpMethod>>,\n]>();\n\nexport const responseTypes = {\n\tjson: 'application/json',\n\ttext: 'text/*',\n\tformData: 'multipart/form-data',\n\tarrayBuffer: '*/*',\n\tblob: '*/*',\n} as const;\n\n// The maximum value of a 32bit int (see issue #117)\nexport const maxSafeTimeout = 2_147_483_647;\n\nexport const stop = Symbol('stop');\n","import {requestMethods} from '../core/constants.js';\nimport type {HttpMethod} from '../types/options.js';\nimport type {RetryOptions} from '../types/retry.js';\n\nexport const normalizeRequestMethod = (input: string): string =>\n\trequestMethods.includes(input as HttpMethod) ? input.toUpperCase() : input;\n\nconst retryMethods = ['get', 'put', 'head', 'delete', 'options', 'trace'];\n\nconst retryStatusCodes = [408, 413, 429, 500, 502, 503, 504];\n\nconst retryAfterStatusCodes = [413, 429, 503];\n\nconst defaultRetryOptions: Required<RetryOptions> = {\n\tlimit: 2,\n\tmethods: retryMethods,\n\tstatusCodes: retryStatusCodes,\n\tafterStatusCodes: retryAfterStatusCodes,\n\tmaxRetryAfter: Number.POSITIVE_INFINITY,\n\tbackoffLimit: Number.POSITIVE_INFINITY,\n};\n\nexport const normalizeRetryOptions = (retry: number | RetryOptions = {}): Required<RetryOptions> => {\n\tif (typeof retry === 'number') {\n\t\treturn {\n\t\t\t...defaultRetryOptions,\n\t\t\tlimit: retry,\n\t\t};\n\t}\n\n\tif (retry.methods && !Array.isArray(retry.methods)) {\n\t\tthrow new Error('retry.methods must be an array');\n\t}\n\n\tif (retry.statusCodes && !Array.isArray(retry.statusCodes)) {\n\t\tthrow new Error('retry.statusCodes must be an array');\n\t}\n\n\treturn {\n\t\t...defaultRetryOptions,\n\t\t...retry,\n\t\tafterStatusCodes: retryAfterStatusCodes,\n\t};\n};\n","import {TimeoutError} from '../errors/TimeoutError.js';\n\nexport type TimeoutOptions = {\n\ttimeout: number;\n\tfetch: typeof fetch;\n};\n\n// `Promise.race()` workaround (#91)\nexport default async function timeout(\n\trequest: Request,\n\tabortController: AbortController | undefined,\n\toptions: TimeoutOptions,\n): Promise<Response> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst timeoutId = setTimeout(() => {\n\t\t\tif (abortController) {\n\t\t\t\tabortController.abort();\n\t\t\t}\n\n\t\t\treject(new TimeoutError(request));\n\t\t}, options.timeout);\n\n\t\tvoid options\n\t\t\t.fetch(request)\n\t\t\t.then(resolve)\n\t\t\t.catch(reject)\n\t\t\t.then(() => {\n\t\t\t\tclearTimeout(timeoutId);\n\t\t\t});\n\t});\n}\n","// DOMException is supported on most modern browsers and Node.js 18+.\n// @see https://developer.mozilla.org/en-US/docs/Web/API/DOMException#browser_compatibility\nconst isDomExceptionSupported = Boolean(globalThis.DOMException);\n\n// TODO: When targeting Node.js 18, use `signal.throwIfAborted()` (https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/throwIfAborted)\nexport function composeAbortError(signal?: AbortSignal) {\n\t/*\n\tNOTE: Use DomException with AbortError name as specified in MDN docs (https://developer.mozilla.org/en-US/docs/Web/API/AbortController/abort)\n\t> When abort() is called, the fetch() promise rejects with an Error of type DOMException, with name AbortError.\n\t*/\n\tif (isDomExceptionSupported) {\n\t\treturn new DOMException(signal?.reason ?? 'The operation was aborted.', 'AbortError');\n\t}\n\n\t// DOMException not supported. Fall back to use of error and override name.\n\tconst error = new Error(signal?.reason ?? 'The operation was aborted.');\n\terror.name = 'AbortError';\n\n\treturn error;\n}\n","// https://github.com/sindresorhus/delay/tree/ab98ae8dfcb38e1593286c94d934e70d14a4e111\n\nimport {composeAbortError} from '../errors/DOMException.js';\nimport {InternalOptions} from '../types/options.js';\n\nexport interface DelayOptions {\n\tsignal?: InternalOptions['signal'];\n}\n\nexport default async function delay(\n\tms: number,\n\t{signal}: DelayOptions,\n): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\tif (signal) {\n\t\t\tif (signal.aborted) {\n\t\t\t\treject(composeAbortError(signal));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsignal.addEventListener('abort', handleAbort, {once: true});\n\t\t}\n\n\t\tfunction handleAbort() {\n\t\t\treject(composeAbortError(signal!));\n\t\t\tclearTimeout(timeoutId);\n\t\t}\n\n\t\tconst timeoutId = setTimeout(() => {\n\t\t\tsignal?.removeEventListener('abort', handleAbort);\n\t\t\tresolve();\n\t\t}, ms);\n\t});\n}\n","import {HTTPError} from '../errors/HTTPError.js';\nimport {TimeoutError} from '../errors/TimeoutError.js';\nimport type {Hooks} from '../types/hooks.js';\nimport type {Input, InternalOptions, NormalizedOptions, Options, SearchParamsInit} from '../types/options.js';\nimport {ResponsePromise} from '../types/ResponsePromise.js';\nimport {deepMerge, mergeHeaders} from '../utils/merge.js';\nimport {normalizeRequestMethod, normalizeRetryOptions} from '../utils/normalize.js';\nimport timeout, {TimeoutOptions} from '../utils/timeout.js';\nimport delay from '../utils/delay.js';\nimport {ObjectEntries} from '../utils/types.js';\nimport {\n\tmaxSafeTimeout,\n\tresponseTypes,\n\tstop,\n\tsupportsAbortController,\n\tsupportsFormData,\n\tsupportsResponseStreams,\n\tsupportsRequestStreams,\n} from './constants.js';\n\nexport class Ky {\n\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\tstatic create(input: Input, options: Options): ResponsePromise {\n\t\tconst ky = new Ky(input, options);\n\n\t\tconst fn = async (): Promise<Response> => {\n\t\t\tif (ky._options.timeout > maxSafeTimeout) {\n\t\t\t\tthrow new RangeError(`The \\`timeout\\` option cannot be greater than ${maxSafeTimeout}`);\n\t\t\t}\n\n\t\t\t// Delay the fetch so that body method shortcuts can set the Accept header\n\t\t\tawait Promise.resolve();\n\t\t\tlet response = await ky._fetch();\n\n\t\t\tfor (const hook of ky._options.hooks.afterResponse) {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tconst modifiedResponse = await hook(\n\t\t\t\t\tky.request,\n\t\t\t\t\tky._options as NormalizedOptions,\n\t\t\t\t\tky._decorateResponse(response.clone()),\n\t\t\t\t);\n\n\t\t\t\tif (modifiedResponse instanceof globalThis.Response) {\n\t\t\t\t\tresponse = modifiedResponse;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tky._decorateResponse(response);\n\n\t\t\tif (!response.ok && ky._options.throwHttpErrors) {\n\t\t\t\tlet error = new HTTPError(response, ky.request, (ky._options as unknown) as NormalizedOptions);\n\n\t\t\t\tfor (const hook of ky._options.hooks.beforeError) {\n\t\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\t\terror = await hook(error);\n\t\t\t\t}\n\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\t// If `onDownloadProgress` is passed, it uses the stream API internally\n\t\t\t/* istanbul ignore next */\n\t\t\tif (ky._options.onDownloadProgress) {\n\t\t\t\tif (typeof ky._options.onDownloadProgress !== 'function') {\n\t\t\t\t\tthrow new TypeError('The `onDownloadProgress` option must be a function');\n\t\t\t\t}\n\n\t\t\t\tif (!supportsResponseStreams) {\n\t\t\t\t\tthrow new Error('Streams are not supported in your environment. `ReadableStream` is missing.');\n\t\t\t\t}\n\n\t\t\t\treturn ky._stream(response.clone(), ky._options.onDownloadProgress);\n\t\t\t}\n\n\t\t\treturn response;\n\t\t};\n\n\t\tconst isRetriableMethod = ky._options.retry.methods.includes(ky.request.method.toLowerCase());\n\t\tconst result = (isRetriableMethod ? ky._retry(fn) : fn()) as ResponsePromise;\n\n\t\tfor (const [type, mimeType] of Object.entries(responseTypes) as ObjectEntries<typeof responseTypes>) {\n\t\t\tresult[type] = async () => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n\t\t\t\tky.request.headers.set('accept', ky.request.headers.get('accept') || mimeType);\n\n\t\t\t\tconst awaitedResult = await result;\n\t\t\t\tconst response = awaitedResult.clone();\n\n\t\t\t\tif (type === 'json') {\n\t\t\t\t\tif (response.status === 204) {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tconst arrayBuffer = await response.clone().arrayBuffer();\n\t\t\t\t\tconst responseSize = arrayBuffer.byteLength;\n\t\t\t\t\tif (responseSize === 0) {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (options.parseJson) {\n\t\t\t\t\t\treturn options.parseJson(await response.text());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn response[type]();\n\t\t\t};\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic request: Request;\n\tprotected abortController?: AbortController;\n\tprotected _retryCount = 0;\n\tprotected _input: Input;\n\tprotected _options: InternalOptions;\n\n\t// eslint-disable-next-line complexity\n\tconstructor(input: Input, options: Options = {}) {\n\t\tthis._input = input;\n\t\tthis._options = {\n\t\t\t// TODO: credentials can be removed when the spec change is implemented in all browsers. Context: https://www.chromestatus.com/feature/4539473312350208\n\t\t\tcredentials: (this._input as Request).credentials || 'same-origin',\n\t\t\t...options,\n\t\t\theaders: mergeHeaders((this._input as Request).headers, options.headers),\n\t\t\thooks: deepMerge<Required<Hooks>>(\n\t\t\t\t{\n\t\t\t\t\tbeforeRequest: [],\n\t\t\t\t\tbeforeRetry: [],\n\t\t\t\t\tbeforeError: [],\n\t\t\t\t\tafterResponse: [],\n\t\t\t\t},\n\t\t\t\toptions.hooks,\n\t\t\t),\n\t\t\tmethod: normalizeRequestMethod(options.method ?? (this._input as Request).method),\n\t\t\t// eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n\t\t\tprefixUrl: String(options.prefixUrl || ''),\n\t\t\tretry: normalizeRetryOptions(options.retry),\n\t\t\tthrowHttpErrors: options.throwHttpErrors !== false,\n\t\t\ttimeout: typeof options.timeout === 'undefined' ? 10_000 : options.timeout,\n\t\t\tfetch: options.fetch ?? globalThis.fetch.bind(globalThis),\n\t\t};\n\n\t\tif (typeof this._input !== 'string' && !(this._input instanceof URL || this._input instanceof globalThis.Request)) {\n\t\t\tthrow new TypeError('`input` must be a string, URL, or Request');\n\t\t}\n\n\t\tif (this._options.prefixUrl && typeof this._input === 'string') {\n\t\t\tif (this._input.startsWith('/')) {\n\t\t\t\tthrow new Error('`input` must not begin with a slash when using `prefixUrl`');\n\t\t\t}\n\n\t\t\tif (!this._options.prefixUrl.endsWith('/')) {\n\t\t\t\tthis._options.prefixUrl += '/';\n\t\t\t}\n\n\t\t\tthis._input = this._options.prefixUrl + this._input;\n\t\t}\n\n\t\tif (supportsAbortController) {\n\t\t\tthis.abortController = new globalThis.AbortController();\n\t\t\tif (this._options.signal) {\n\t\t\t\tconst originalSignal = this._options.signal;\n\n\t\t\t\tthis._options.signal.addEventListener('abort', () => {\n\t\t\t\t\tthis.abortController!.abort(originalSignal.reason);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._options.signal = this.abortController.signal;\n\t\t}\n\n\t\tif (supportsRequestStreams) {\n\t\t\t// @ts-expect-error - Types are outdated.\n\t\t\tthis._options.duplex = 'half';\n\t\t}\n\n\t\tthis.request = new globalThis.Request(this._input as RequestInfo, this._options as RequestInit);\n\n\t\tif (this._options.searchParams) {\n\t\t\t// eslint-disable-next-line unicorn/prevent-abbreviations\n\t\t\tconst textSearchParams = typeof this._options.searchParams === 'string'\n\t\t\t\t? this._options.searchParams.replace(/^\\?/, '')\n\t\t\t\t: new URLSearchParams(this._options.searchParams as unknown as SearchParamsInit).toString();\n\t\t\t// eslint-disable-next-line unicorn/prevent-abbreviations\n\t\t\tconst searchParams = '?' + textSearchParams;\n\t\t\tconst url = this.request.url.replace(/(?:\\?.*?)?(?=#|$)/, searchParams);\n\n\t\t\t// To provide correct form boundary, Content-Type header should be deleted each time when new Request instantiated from another one\n\t\t\tif (\n\t\t\t\t((supportsFormData && this._options.body instanceof globalThis.FormData)\n\t\t\t\t\t|| this._options.body instanceof URLSearchParams) && !(this._options.headers && (this._options.headers as Record<string, string>)['content-type'])\n\t\t\t) {\n\t\t\t\tthis.request.headers.delete('content-type');\n\t\t\t}\n\n\t\t\t// The spread of `this.request` is required as otherwise it misses the `duplex` option for some reason and throws.\n\t\t\tthis.request = new globalThis.Request(new globalThis.Request(url, {...this.request}), this._options as RequestInit);\n\t\t}\n\n\t\tif (this._options.json !== undefined) {\n\t\t\tthis._options.body = JSON.stringify(this._options.json);\n\t\t\tthis.request.headers.set('content-type', this._options.headers.get('content-type') ?? 'application/json');\n\t\t\tthis.request = new globalThis.Request(this.request, {body: this._options.body});\n\t\t}\n\t}\n\n\tprotected _calculateRetryDelay(error: unknown) {\n\t\tthis._retryCount++;\n\n\t\tif (this._retryCount < this._options.retry.limit && !(error instanceof TimeoutError)) {\n\t\t\tif (error instanceof HTTPError) {\n\t\t\t\tif (!this._options.retry.statusCodes.includes(error.response.status)) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tconst retryAfter = error.response.headers.get('Retry-After');\n\t\t\t\tif (retryAfter && this._options.retry.afterStatusCodes.includes(error.response.status)) {\n\t\t\t\t\tlet after = Number(retryAfter);\n\t\t\t\t\tif (Number.isNaN(after)) {\n\t\t\t\t\t\tafter = Date.parse(retryAfter) - Date.now();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tafter *= 1000;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof this._options.retry.maxRetryAfter !== 'undefined' && after > this._options.retry.maxRetryAfter) {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn after;\n\t\t\t\t}\n\n\t\t\t\tif (error.response.status === 413) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst BACKOFF_FACTOR = 0.3;\n\t\t\treturn Math.min(this._options.retry.backoffLimit, BACKOFF_FACTOR * (2 ** (this._retryCount - 1)) * 1000);\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\tprotected _decorateResponse(response: Response): Response {\n\t\tif (this._options.parseJson) {\n\t\t\tresponse.json = async () => this._options.parseJson!(await response.text());\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tprotected async _retry<T extends (...args: any) => Promise<any>>(fn: T): Promise<ReturnType<T> | void> {\n\t\ttry {\n\t\t\treturn await fn();\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-implicit-any-catch\n\t\t} catch (error) {\n\t\t\tconst ms = Math.min(this._calculateRetryDelay(error), maxSafeTimeout);\n\t\t\tif (ms !== 0 && this._retryCount > 0) {\n\t\t\t\tawait delay(ms, {signal: this._options.signal});\n\n\t\t\t\tfor (const hook of this._options.hooks.beforeRetry) {\n\t\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\t\tconst hookResult = await hook({\n\t\t\t\t\t\trequest: this.request,\n\t\t\t\t\t\toptions: (this._options as unknown) as NormalizedOptions,\n\t\t\t\t\t\terror: error as Error,\n\t\t\t\t\t\tretryCount: this._retryCount,\n\t\t\t\t\t});\n\n\t\t\t\t\t// If `stop` is returned from the hook, the retry process is stopped\n\t\t\t\t\tif (hookResult === stop) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn this._retry(fn);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprotected async _fetch(): Promise<Response> {\n\t\tfor (const hook of this._options.hooks.beforeRequest) {\n\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\tconst result = await hook(this.request, (this._options as unknown) as NormalizedOptions);\n\n\t\t\tif (result instanceof Request) {\n\t\t\t\tthis.request = result;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (result instanceof Response) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\tif (this._options.timeout === false) {\n\t\t\treturn this._options.fetch(this.request.clone());\n\t\t}\n\n\t\treturn timeout(this.request.clone(), this.abortController, this._options as TimeoutOptions);\n\t}\n\n\t/* istanbul ignore next */\n\tprotected _stream(response: Response, onDownloadProgress: Options['onDownloadProgress']) {\n\t\tconst totalBytes = Number(response.headers.get('content-length')) || 0;\n\t\tlet transferredBytes = 0;\n\n\t\tif (response.status === 204) {\n\t\t\tif (onDownloadProgress) {\n\t\t\t\tonDownloadProgress({percent: 1, totalBytes, transferredBytes}, new Uint8Array());\n\t\t\t}\n\n\t\t\treturn new globalThis.Response(\n\t\t\t\tnull,\n\t\t\t\t{\n\t\t\t\t\tstatus: response.status,\n\t\t\t\t\tstatusText: response.statusText,\n\t\t\t\t\theaders: response.headers,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\treturn new globalThis.Response(\n\t\t\tnew globalThis.ReadableStream({\n\t\t\t\tasync start(controller) {\n\t\t\t\t\tconst reader = response.body!.getReader();\n\n\t\t\t\t\tif (onDownloadProgress) {\n\t\t\t\t\t\tonDownloadProgress({percent: 0, transferredBytes: 0, totalBytes}, new Uint8Array());\n\t\t\t\t\t}\n\n\t\t\t\t\tasync function read() {\n\t\t\t\t\t\tconst {done, value} = await reader.read();\n\t\t\t\t\t\tif (done) {\n\t\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (onDownloadProgress) {\n\t\t\t\t\t\t\ttransferredBytes += value.byteLength;\n\t\t\t\t\t\t\tconst percent = totalBytes === 0 ? 0 : transferredBytes / totalBytes;\n\t\t\t\t\t\t\tonDownloadProgress({percent, transferredBytes, totalBytes}, value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontroller.enqueue(value);\n\t\t\t\t\t\tawait read();\n\t\t\t\t\t}\n\n\t\t\t\t\tawait read();\n\t\t\t\t},\n\t\t\t}),\n\t\t\t{\n\t\t\t\tstatus: response.status,\n\t\t\t\tstatusText: response.statusText,\n\t\t\t\theaders: response.headers,\n\t\t\t},\n\t\t);\n\t}\n}\n","/*! MIT License © Sindre Sorhus */\n\nimport {Ky} from './core/Ky.js';\nimport {requestMethods, stop} from './core/constants.js';\nimport type {KyInstance} from './types/ky.js';\nimport type {Input, Options} from './types/options.js';\nimport {validateAndMerge} from './utils/merge.js';\nimport {Mutable} from './utils/types.js';\n\nconst createInstance = (defaults?: Partial<Options>): KyInstance => {\n\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\tconst ky: Partial<Mutable<KyInstance>> = (input: Input, options?: Options) => Ky.create(input, validateAndMerge(defaults, options));\n\n\tfor (const method of requestMethods) {\n\t\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\t\tky[method] = (input: Input, options?: Options) => Ky.create(input, validateAndMerge(defaults, options, {method}));\n\t}\n\n\tky.create = (newDefaults?: Partial<Options>) => createInstance(validateAndMerge(newDefaults));\n\tky.extend = (newDefaults?: Partial<Options>) => createInstance(validateAndMerge(defaults, newDefaults));\n\tky.stop = stop;\n\n\treturn ky as KyInstance;\n};\n\nconst ky = createInstance();\n\nexport default ky;\n\nexport type {\n\tOptions,\n\tNormalizedOptions,\n\tRetryOptions,\n\tSearchParamsOption,\n\tDownloadProgress,\n} from './types/options.js';\n\nexport type {\n\tHooks,\n\tBeforeRequestHook,\n\tBeforeRetryHook,\n\tBeforeRetryState,\n\tBeforeErrorHook,\n\tAfterResponseHook,\n} from './types/hooks.js';\n\nexport type {ResponsePromise} from './types/ResponsePromise.js';\nexport type {KyResponse} from './types/response.js';\nexport {HTTPError} from './errors/HTTPError.js';\nexport {TimeoutError} from './errors/TimeoutError.js';\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","_objectSpread2","target","i","length","source","forEach","getOwnPropertyDescriptors","defineProperties","HTTPError","response","request","options","code","status","title","statusText","trim","reason","name","Error","TimeoutError","isObject","validateAndMerge","sources","Array","isArray","TypeError","deepMerge","mergeHeaders","source1","source2","result","globalThis","Headers","isHeadersInstance","entries","delete","set","returnValue","headers","supportsRequestStreams","duplexAccessed","hasContentType","supportsReadableStream","ReadableStream","supportsRequest","Request","body","method","duplex","has","supportsAbortController","AbortController","supportsResponseStreams","supportsFormData","FormData","requestMethods","responseTypes","json","text","formData","arrayBuffer","blob","maxSafeTimeout","stop","Symbol","normalizeRequestMethod","input","toUpperCase","retryAfterStatusCodes","defaultRetryOptions","limit","methods","statusCodes","afterStatusCodes","maxRetryAfter","Number","POSITIVE_INFINITY","backoffLimit","normalizeRetryOptions","retry","timeout","abortController","timeoutId","setTimeout","abort","fetch","catch","clearTimeout","isDomExceptionSupported","Boolean","DOMException","composeAbortError","signal","delay","ms","aborted","addEventListener","handleAbort","once","removeEventListener","Ky","_input","_options","credentials","hooks","beforeRequest","beforeRetry","beforeError","afterResponse","prefixUrl","String","throwHttpErrors","bind","URL","startsWith","endsWith","originalSignal","searchParams","textSearchParams","replace","URLSearchParams","toString","url","JSON","stringify","get","_retryCount","includes","retryAfter","after","isNaN","Date","parse","now","BACKOFF_FACTOR","Math","min","parseJson","_calculateRetryDelay","hook","retryCount","hookResult","_retry","Response","clone","totalBytes","transferredBytes","percent","Uint8Array","start","controller","read","reader","close","byteLength","enqueue","getReader","ky","RangeError","_fetch","_decorateResponse","modifiedResponse","ok","_stream","isRetriableMethod","toLowerCase","type","awaitedResult","responseSize","createInstance","defaults","create","newDefaults","extend"],"sourceRoot":""}